/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import jmr.iu.ImageListPanel;
import jmr.iu.ImageListPanel.ImageSelectionListener;

/**
 * Class which shows the list of the images after a comparison is done.
 * In that list the images are ordered depending on how much it's similar to the
 * query image. The more it's similar, the sooner the image will be shown.
 *
 * @author Lidia Sánchez Mérida
 */
public class ImageListInnerWindow extends javax.swing.JInternalFrame {

    /**
     * A reference to the main window of the app.
     */
    private MainWindow parent;
    
    /**
     * Creates a new form ImageListInnerWindow.
     * @param parent the reference to the main window of the app.
     */
    public ImageListInnerWindow(MainWindow parent) {
        initComponents();
        this.parent = parent;
        imageListPanel.setImageViewSize(110, 110);
        
        ImageSelectionListener n = new ImageSelectionListener() {
            @Override
            public void imageSelected(ImageListPanel.ImageSelectionEvent ise) {
                BufferedImage img = (BufferedImage) ise.getSource();
                //handle double click event.
                try{
                    String labels = parent.showLabel(img);
                    parent.setOutputText(labels);
                }catch (Exception e){
                    System.out.println(e.getStackTrace());
                }
                
            }
        };
        
        imageListPanel.addImageSelectionListener(n);
    }
    
    /**
     * Gets the panel which has a list of images after the comparison.
     * @return panel which shows a list of images.
     */
    public jmr.iu.ImageListPanel getImageListPanel() {
        return imageListPanel;
    }
    
    /**
     * Adds a new image to the list of images.
     * @param imageURL the URL direction of the image to be added.
     * @param label a label which is related to the new image.
     */
    public void add(URL imageURL, String label) {
        BufferedImage image;
        try {
            image = ImageIO.read(imageURL);
            if (image != null) {
                imageListPanel.add(image, label);
            }
        } catch (IOException ex) {
            System.err.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageListPanel = new jmr.iu.ImageListPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Query Results");
        setPreferredSize(new java.awt.Dimension(800, 150));

        imageListPanel.setImageViewSize(new java.awt.Dimension(50, 50));
        imageListPanel.setPreferredSize(new java.awt.Dimension(150, 130));
        getContentPane().add(imageListPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private jmr.iu.ImageListPanel imageListPanel;
    // End of variables declaration//GEN-END:variables
}
