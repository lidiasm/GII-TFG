/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.net.URL;

/**
 * Class which implements a inner window which can contain one image.
 *
 * @author Lidia Sánchez Mérida
 */
public class ImageInnerWindow extends javax.swing.JInternalFrame {

    /**
     * A reference to the main window of the app.
     */
    private MainWindow parent = null;
    /**
     * The URL direction of the image which is contained in the inner window.
     */
    private URL url = null;
    
    /**
     * Creates new form ImageInnerWindow.
     * @param parent a reference to the main window of the app.
     * @param url the URL direction of the image which is shown in the inner window.
     */
    public ImageInnerWindow(MainWindow parent, URL url) {
        initComponents();
        this.parent = parent;
        this.url = url;
    }
    
    /**
     * Gets the reference to the main window of the app.
     * @return the reference to the main window.
     */
    public MainWindow getMainWindow() {
        return parent;
    }
    
    /**
     * Gets the image canvas which contains an image.
     * @return image canvas.
     */
    public ImageCanvas getImageCanvas() {
        return imageCanvas;
    }
    
    /**
     * Gets the url of the image which is shown in the inner window.
     * @return url of its image.
     */
    public URL getURL() {
        return url;
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        imageCanvasPanel = new javax.swing.JPanel();
        imageCanvas = new ui.ImageCanvas();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        imageCanvasPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageCanvasPanelMouseClicked(evt);
            }
        });
        imageCanvasPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout imageCanvasLayout = new javax.swing.GroupLayout(imageCanvas);
        imageCanvas.setLayout(imageCanvasLayout);
        imageCanvasLayout.setHorizontalGroup(
            imageCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );
        imageCanvasLayout.setVerticalGroup(
            imageCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        imageCanvasPanel.add(imageCanvas, java.awt.BorderLayout.CENTER);

        jScrollPane2.setViewportView(imageCanvasPanel);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Updates the view of the inner window which shows the query image.
     * @param evt 
     */
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        parent.getQueryImageCheckBox().setSelected(this.getImageCanvas().isQueryImage());
    }//GEN-LAST:event_formInternalFrameActivated

        /**
     * Shows the label descriptor of the image in which the user has clicked twice.
     * @param evt 
     */
    private void imageCanvasPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageCanvasPanelMouseClicked
        // TODO add your handling code here:
        // Double click.
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            parent.setOutputText(parent.showLabel(this.getImageCanvas().getImage()));
       }
    }//GEN-LAST:event_imageCanvasPanelMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ui.ImageCanvas imageCanvas;
    private javax.swing.JPanel imageCanvasPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
